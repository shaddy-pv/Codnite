{
  "name": "Codnite",
  "version": "0.0.1",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\"",
    "dev:frontend": "vite",
    "dev:backend": "tsx backend/src/server.ts",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "vite build",
    "build:backend": "tsc --project backend/tsconfig.json",
    "build:analyze": "vite build --mode analyze",
    "build:prod": "NODE_ENV=production npm run build",
    "start": "node backend/dist/server.js",
    "start:prod": "NODE_ENV=production node backend/dist/server.js",
    "start:dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\"",
    "migrate": "tsx backend/src/utils/migrate-cli.ts",
    "migrate:up": "tsx backend/src/utils/migrate-cli.ts up",
    "migrate:down": "tsx backend/src/utils/migrate-cli.ts down",
    "migrate:status": "tsx backend/src/utils/migrate-cli.ts status",
    "migrate:create": "tsx backend/src/utils/migrate-cli.ts create",
    "migrate:fix": "tsx backend/src/utils/fix-migrations.ts",
    "seed:colleges": "tsx backend/src/utils/seed-colleges.ts",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --fix",
    "type-check": "tsc --noEmit",
    "analyze": "npm run build:analyze && npm run bundle:analyze",
    "bundle:analyze": "tsx scripts/bundle-analyzer.ts",
    "optimize": "npm run analyze && npm run db:optimize",
    "db:optimize": "tsx backend/src/utils/databaseOptimizer.ts",
    "test": "jest",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:performance": "jest --testPathPattern=performance",
    "docker:build": "docker build -f Dockerfile.prod -t codnite:latest .",
    "docker:run": "docker run -p 3000:3000 --env-file .env.production codnite:latest",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:prod:build": "docker-compose -f docker-compose.prod.yml up -d --build",
    "docker:prod:down": "docker-compose -f docker-compose.prod.yml down",
    "docker:prod:logs": "docker-compose -f docker-compose.prod.yml logs -f",
    "docker:prod:restart": "docker-compose -f docker-compose.prod.yml restart",
    "docker:compose": "docker-compose up --build",
    "docker:down": "docker-compose down",
    "deploy:prod": "bash scripts/deploy-production.sh",
    "deploy:staging": "bash scripts/deploy-staging.sh",
    "rollback": "./deploy.sh rollback",
    "backup": "./deploy.sh backup",
    "backup:db": "bash scripts/backup-db.sh",
    "restore:db": "bash scripts/restore-db.sh",
    "health": "./deploy.sh health",
    "health:check": "curl -f http://localhost:3000/api/health",
    "health:detailed": "curl -f http://localhost:3000/api/health/detailed",
    "monitor:logs": "tail -f /var/log/codnite/app.log",
    "monitor:status": "systemctl status codnite",
    "monitor:restart": "sudo systemctl restart codnite",
    "monitor:stop": "sudo systemctl stop codnite",
    "monitor:start": "sudo systemctl start codnite",
    "security:audit": "npm audit --audit-level=high",
    "security:fix": "npm audit fix",
    "security:scan": "docker run --rm -v $(pwd):/app aquasec/trivy fs /app",
    "performance:test": "artillery run tests/performance/load-test.yml",
    "performance:report": "artillery run tests/performance/load-test.yml --output artillery-report.json",
    "lighthouse:ci": "lighthouse-ci autorun",
    "clean": "rm -rf dist backend/dist node_modules backend/node_modules",
    "clean:cache": "rm -rf .vite node_modules/.cache",
    "clean:logs": "sudo rm -rf /var/log/codnite/*.log",
    "setup:prod": "bash scripts/setup-production.sh",
    "ssl:renew": "sudo certbot renew --nginx",
    "ssl:status": "sudo certbot certificates"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.911.0",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.19",
    "@tiptap/extension-character-count": "^3.7.2",
    "@tiptap/extension-code-block-lowlight": "^3.7.2",
    "@tiptap/extension-image": "^3.7.2",
    "@tiptap/extension-link": "^3.7.2",
    "@tiptap/extension-mention": "^3.7.2",
    "@tiptap/extension-placeholder": "^3.7.2",
    "@tiptap/react": "^3.7.2",
    "@tiptap/starter-kit": "^3.7.2",
    "@tiptap/suggestion": "^3.7.2",
    "@types/dockerode": "^3.3.44",
    "@types/pg": "^8.15.5",
    "aws-sdk": "^2.1692.0",
    "axios": "^1.12.2",
    "bcryptjs": "^3.0.2",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "date-fns": "^4.1.0",
    "dockerode": "^4.0.9",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "express-rate-limit": "^7.1.5",
    "fast-deep-equal": "^3.1.3",
    "helmet": "^7.1.0",
    "highlight.js": "^11.11.1",
    "ioredis": "^5.8.1",
    "jsonwebtoken": "^9.0.2",
    "lowlight": "^3.3.0",
    "lucide-react": "^0.441.0",
    "morgan": "^1.10.0",
    "multer": "^2.0.2",
    "pg": "^8.16.3",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hot-toast": "^2.6.0",
    "react-router-dom": "^6.26.2",
    "redis": "^5.8.3",
    "sharp": "^0.34.4",
    "socket.io": "^4.7.5",
    "socket.io-client": "^4.8.1",
    "tippy.js": "^6.3.7",
    "tsx": "^4.7.0",
    "use-sync-external-store": "^1.6.0",
    "uuid": "^13.0.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@babel/core": "^7.28.4",
    "@babel/plugin-transform-react-jsx": "^7.27.1",
    "@babel/preset-react": "^7.27.1",
    "@playwright/test": "^1.40.1",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/express-rate-limit": "^6.0.0",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^2.0.0",
    "@types/node": "^20.19.22",
    "@types/react": "^18.3.1",
    "@types/react-dom": "^18.3.1",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^10.0.0",
    "@types/winston": "^2.4.4",
    "@typescript-eslint/eslint-plugin": "^5.54.0",
    "@typescript-eslint/parser": "^5.54.0",
    "@vitejs/plugin-legacy": "^6.1.1",
    "@vitejs/plugin-react": "^4.2.1",
    "autoprefixer": "latest",
    "compression-webpack-plugin": "^11.1.0",
    "concurrently": "^9.2.0",
    "eslint": "^8.50.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.1",
    "jest": "^30.2.0",
    "postcss": "latest",
    "rollup-plugin-visualizer": "^6.0.5",
    "supertest": "^7.1.4",
    "tailwindcss": "3.4.17",
    "ts-jest": "^29.4.4",
    "typescript": "^5.9.2",
    "vite": "^6.3.5",
    "vite-bundle-analyzer": "^1.2.3",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "description": "This is the biggest project of my life and i am Md Shadan Siddiqui who are just tried to make this project successfull and lead the world with the help of coding and technology.",
  "main": "postcss.config.js",
  "keywords": [],
  "author": "Md Shadan Siddiqui",
  "license": "ISC"
}
